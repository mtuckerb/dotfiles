if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'vimwiki/vimwiki'
Plug 'christoomey/vim-run-interactive'
Plug 'ludovicchabant/vim-gutentags'
Plug 'skywind3000/gutentags_plus'
Plug 'elixir-lang/vim-elixir'
Plug 'fatih/vim-go'
Plug 'janko-m/vim-test'
"Plug 'kchmck/vim-coffee-script'
Plug 'pbrisbin/vim-mkdir'
Plug 'slim-template/vim-slim'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise' " adds `end` to `do`, `if`, and `def` blocks. Not {}
Plug 'tpope/vim-eunuch' " adds :Delete, :Move, :Rename etc
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-projectionist' " creates bindings for :A and the like
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rhubarb' "Adds :Gbrowse to open file in GH
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/tComment' "comment line,paragraph,etc `gcc`, `gcp`
"Plug 'prettier/vim-prettier', {
"  \ 'do': 'yarn install',
"  \ 'branch': 'release/1.x',
"  \ 'for': [
"    \ 'javascript',
"    \ 'typescript',
"    \ 'css',
"    \ 'less',
"    \ 'scss',
"    \ 'json',
"    \ 'graphql',
"    \ 'markdown',
"    \ 'vue',
"    \ 'lua',
"    \ 'php',
"    \ 'python',
"    \ 'ruby',
"    \ 'html',
"    \ 'swift' ] }
Plug 'ngmy/vim-rubocop'
Plug 'will133/vim-dirdiff'
Plug 'godlygeek/tabular' " Use :Tab to align text, and more http://vimcasts.org/episodes/aligning-text-with-tabular-vim/
"Plug 'airblade/vim-gitgutter'
Plug 'rakr/vim-one' "theme
Plug 'wakatime/vim-wakatime'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'powerline/fonts'
Plug 'Yggdroot/indentLine'
Plug 'chriskempson/vim-tomorrow-theme'
Plug 'zivyangll/git-blame.vim'
Plug 'mileszs/ack.vim'
"Plug 'gevann/vim-rg' " I think this is reduntant with the vim-ripgrep below
Plug 'pgr0ss/vim-github-url'
Plug 'jacoborus/tender.vim' "a theme
Plug 'terryma/vim-smooth-scroll'
"Plug 'w0rp/ale'
Plug 'tpope/vim-tbone' "tmux basics
Plug 'tpope/vim-cucumber'
Plug 'junegunn/gv.vim' "git commit browser :GV to open
Plug 'jparise/vim-graphql'
Plug 'vim-scripts/ruby-matchit' "use % to jump to corresponding end tag in ruby
Plug 'ap/vim-css-color'
Plug 'sjl/gundo.vim' " View the vim undo tree
Plug 'gregsexton/matchtag' "matches HTML tags
Plug 'luochen1990/rainbow' "rainbow parens
Plug 'mattn/gist-vim'
Plug 'mattn/webapi-vim'
Plug 'MaxMEllon/vim-jsx-pretty'
Plug 'leafgarland/typescript-vim'
"Plug 'reinh/vim-makegreen'
Plug 'ruanyl/vim-gh-line'
Plug 'kablamo/vim-git-log'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-commentary'
Plug 'othree/yajs.vim'
Plug 'mhartington/oceanic-next'
"Plug 'jremmen/vim-ripgrep'
Plug 'junegunn/vim-peekaboo'
Plug 'nelstrom/vim-visual-star-search'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'neoclide/coc-tabnine', {'do': 'yarn install --frozen-lockfile'}
"Plug 'neoclide/coc-prettier', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-json', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-html', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-eslint', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-css', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-yaml', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-tsserver', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-git', {'do': 'yarn install --frozen-lockfile'}
Plug 'sheerun/vim-polyglot' "Multilanguage syntax and indentation support
Plug 'reedes/vim-wordy'
Plug 'FredKSchott/CoVim'
if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
